<Window x:Class="Poster.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Poster"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainWindow}"
        Title="Poster" MinHeight="400" MinWidth="600" Padding="5">
  <Window.Resources>
    <local:HttpContentTypeConverter x:Key="contentTypeConverter" />
    <local:ProgressStateConverter x:Key="progressStateConverter" />
  </Window.Resources>
  <Window.TaskbarItemInfo>
    <TaskbarItemInfo ProgressValue="{Binding Value, ElementName=progressBar}"
                     ProgressState="{Binding IsIndeterminate, ElementName=progressBar, Converter={StaticResource progressStateConverter}}"/>
  </Window.TaskbarItemInfo>
  <DockPanel>
    <DockPanel DockPanel.Dock="Top" Margin="2">
      <Label DockPanel.Dock="Left" Margin="2" VerticalContentAlignment="Center">URL:</Label>
      <Button DockPanel.Dock="Right"
        Margin="5" Padding="5" VerticalAlignment="Center"
        Click="OnSendClicked">
        _Send
      </Button>
      <TextBlock x:Name="urlText"
        DockPanel.Dock="Bottom"
        VerticalAlignment="Center" Margin="10,0">
        URL
      </TextBlock>
      <TextBox x:Name="urlInput"
        Margin="5" Padding="5"
        VerticalContentAlignment="Center"
        TextChanged="OnUrlChanged" KeyDown="OnUrlTextKeyPressed" />
    </DockPanel>
    <StatusBar DockPanel.Dock="Bottom" Padding="2" HorizontalContentAlignment="Stretch">
      <Grid HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}">
        <TextBlock x:Name="statusBar" Text="Ready" />
        <ProgressBar
          x:Name="progressBar"
          Width="80"
          Height="{Binding ActualHeight, ElementName=statusBar, Mode=OneWay}"
          HorizontalAlignment="Right"
          Maximum="1" />
      </Grid>
    </StatusBar>
    <Grid Margin="5">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="45*" />
        <ColumnDefinition Width="55*" />
      </Grid.ColumnDefinitions>
      <GroupBox Header="Request" Grid.Column="0" Margin="2" Padding="2">
        <DockPanel x:Name="requestPanel" d:DataContext="{d:DesignInstance Type=local:RequestModel}">
          <local:HintLine x:Name="methodLine" DockPanel.Dock="Top" Hint="Method: ">
            <ComboBox
              x:Uid="methodSelector"
              VerticalContentAlignment="Center"
              IsEditable="True"
              SelectionChanged="OnMethodChanged">
            </ComboBox>
          </local:HintLine>
          <local:HintLine DockPanel.Dock="Top" Hint="Content-Type: ">
            <ComboBox
              x:Uid="contentTypeSelector"
              VerticalAlignment="Center"
              IsEditable="True"
              SelectionChanged="OnContentTypeChanged">
            </ComboBox>
          </local:HintLine>
          <Expander Name="headersExpander"
            DockPanel.Dock="Top"
            Header="Headers" ExpandDirection="Down" IsTabStop="True">
            <TabControl x:Name="headersTab" SelectionChanged="OnHeadersTabChanged">
              <TabItem Header="Grid">
                <DataGrid
                  x:Name="headersGrid"
                  ColumnWidth="*"
                  Margin="2" Padding="2"
                  ItemsSource="{Binding RequestHeaders}"
                  AutoGenerateColumns="False"
                  CanUserSortColumns="False">
                    <DataGrid.Columns>
                      <DataGridTextColumn Width="40*" Header="Name" Binding="{Binding Name}" />
                      <DataGridTextColumn Width="60*" Header="Value" Binding="{Binding Value}" />
                    </DataGrid.Columns>
                  </DataGrid>
              </TabItem>
              <TabItem Header="Text">
                <TextBox x:Name="headersInput"
                  Padding="5" MinHeight="60"
                  TextWrapping="Wrap"
                  AcceptsReturn="True" />
              </TabItem>
            </TabControl>
          </Expander>
          <Separator DockPanel.Dock="Top" Width="1" />
          <TabControl x:Name="requestTab" SelectedIndex="{Binding RequestType, Converter={StaticResource contentTypeConverter}}">
            <TabItem Header="Text" IsSelected="True">
              <TextBox x:Name="textInput"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                Padding="5"
                TextWrapping="Wrap"
                AcceptsReturn="True"
                AllowDrop="True"/>
            </TabItem>
            <TabItem Header="Image" IsEnabled="False">
              <DockPanel x:Name="imageArea"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                AllowDrop="True" PreviewDragOver="OnImageDragOver" Drop="OnImageDrop">
                <Label DockPanel.Dock="Top">Drag image here (not file).</Label>
                <Viewbox PreviewDragOver="OnImageDragOver">
                  <Image x:Name="imageInput" />
                </Viewbox>
              </DockPanel>
            </TabItem>
            <TabItem Header="File">
              <DockPanel>
                <Button Name="filePickerButton"
                  DockPanel.Dock="Top"
                  Margin="2" Padding="2"
                  Click="OnFilePickerClicked">
                  Select File
                </Button>
                <TextBox
                  x:Name="inputFilePath"
                  HorizontalAlignment="Stretch"
                  TextWrapping="Wrap"
                  Margin="2" Padding="2"
                  AllowDrop="True"
                  PreviewDragOver="OnFileDragOver" Drop="OnFileDrop">
                  <TextBox.Style>
                    <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                      <Style.Resources>
                        <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Top" Stretch="None">
                          <VisualBrush.Visual>
                            <!-- It's totally OK even if label is too long. -->
                            <Label Margin="5" Padding="5" Foreground="LightGray">
                              Enter file path or click above button or drag file here.
                            </Label>
                          </VisualBrush.Visual>
                        </VisualBrush>
                      </Style.Resources>
                      <Style.Triggers>
                        <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                          <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                          <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                          <Setter Property="Background" Value="White" />
                        </Trigger>
                      </Style.Triggers>
                    </Style>
                  </TextBox.Style>
                </TextBox>
              </DockPanel>
            </TabItem>
          </TabControl>
        </DockPanel>
      </GroupBox>
      <GroupBox Header="Response" Grid.Column="1" Margin="2" Padding="2">
        <DockPanel x:Name="responsePanel" d:DataContext="{d:DesignInstance Type=local:ResponseModel}">
          <Expander DockPanel.Dock="Top" HorizontalContentAlignment="Stretch">
            <Expander.Header>
              <DockPanel HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}">
                <Label>Status:</Label>
                <TextBlock x:Name="statusText"
                  Margin="2" Padding="2"
                  VerticalAlignment="Center"
                  ToolTip="{Binding Text, ElementName=statusText}"/>
              </DockPanel>
            </Expander.Header>
            <TextBox x:Name="responseInfo"
              Margin="5" Padding="5"
              IsReadOnly="True" AcceptsReturn="True">
            </TextBox>
          </Expander>
          <Separator DockPanel.Dock="Top" Width="1" />
          <TabControl SelectedIndex="{Binding ResponseType, Converter={StaticResource contentTypeConverter}}">
            <TabItem Header="_Text">
              <TextBox x:Name="textResponse"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                Margin="5" Padding="5"
                IsReadOnly="True" AcceptsReturn="True"
                TextWrapping="Wrap">
              </TextBox>
            </TabItem>
            <TabItem Header="_Image">
              <Image x:Name="imageResponse"/>
            </TabItem>
            <TabItem Header="_File">
              <DockPanel>
                <StackPanel
                  DockPanel.Dock="Top"
                  Orientation="Horizontal"
                  Margin="2">
                  <Button Margin="2" Padding="2"
                    Click="OnFileOpenClicked">
                    _Open
                  </Button>
                  <Button Margin="2" Padding="2"
                    Click="OnFolderOpenClicked">
                    Fol_der
                  </Button>
                  <Button Margin="2" Padding="2"
                    Click="OnFileSaveClicked">
                    S_ave To
                  </Button>
                </StackPanel>
                <TextBox x:Name="fileResponsePath"
                  Margin="5" Padding="5"
                  HorizontalAlignment="Stretch"
                  IsReadOnly="True" AcceptsReturn="True" />
              </DockPanel>
            </TabItem>
          </TabControl>
        </DockPanel>
      </GroupBox>
    </Grid>
  </DockPanel>
</Window>
